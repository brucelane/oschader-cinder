#version 430
#extension GL_ARB_compute_shader : enable
#extension GL_ARB_shader_storage_buffer_object : enable

#define WORK_GROUP_SIZE 128

uniform float i_delta;
uniform float i_time;
uniform float numParticles;

layout( std140, binding = 1 ) buffer Pos {
	vec4 pos[];
};

layout( std140, binding = 2 ) buffer Vel {
	vec4 vel[];
};

layout( local_size_x = WORK_GROUP_SIZE,  local_size_y = 1, local_size_z = 1 ) in;

void main() {
	uint i = gl_GlobalInvocationID.x;

	if( i >= numParticles )
	{
		return;
	}

	float iPos = float(i) / numParticles;
	vec4 velocity = vel[i] + vec4(0, 0.00001 * (iPos - 0.5) * 2, 0, 1);
	vec3 position = pos[i].xyz + velocity.xyz;
	position.y = iPos;
	float alpha = pos[i].w;
	alpha += ceil(max(0, (1.0 / numParticles) - abs(iPos - i_time)));
	alpha = min(1, alpha);
	alpha -= i_delta * 0.01;
	pos[i] = vec4(position, 1);
	vel[i] = velocity;
}
